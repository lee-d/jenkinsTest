@NonCPS
def getJobs() {
    def analysis = new XmlSlurper().parse("${workspace}/target/dependency-check-report.xml")

    def myDataMap = [:]

    analysis.dependencies.dependency.each
     {
         if (it.vulnerabilities.vulnerability.size()) {
            def isHigh = false
             it.it.vulnerabilities.vulnerability.each { vul ->
               isHigh = isHigh || vul.severity.text() === 'High'
             }
             if (isHigh) {
               fileName = it.fileName.text()
               myDataMap[fileName] = it.vulnerabilities.vulnerability.size()
             }
         }
     }

    def myCustomDataMap = [:]
    myCustomDataMap[analysis.projectInfo.artifactID] = myDataMap
    return myCustomDataMap
}

pipeline {
    agent any
    triggers {
        pollSCM 'H/5 * * * *'
        cron 'H H(0-5) * * *'
    }
    environment {
        SERVICE = 'foo'
    }
    stages {
        stage('Maven Build') {
            steps {
                sh "mvn -B clean verify -DskipTests"
                archiveArtifacts artifacts: 'target/*.jar'
                dependencyCheckPublisher pattern: 'target/dependency-check-report.*'

                script {
                    def result = getJobs()
                    step([$class: 'InfluxDbPublisher', target: 'grafana', customPrefix: 'test1', customDataMap: result])
                }
            }
        }
    }
}
